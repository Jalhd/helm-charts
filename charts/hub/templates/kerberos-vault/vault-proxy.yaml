apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-proxy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: vault-proxy
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: vault-proxy
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: vault-proxy
          image: "{{ .Values.global.imageRegistry }}{{ .Values.kerberoshub.proxy.repository }}:{{ .Values.kerberoshub.proxy.tag }}"
          imagePullPolicy: {{ .Values.kerberoshub.proxy.pullPolicy }}
          ports:
            - containerPort: 8080
              name: http
          env:
            # Kerberos Hub API
            - name: KERBEROS_API_CHECK_SUBSCRIPTION
              value: "{{ .Values.kerberoshub.api.schema }}://{{ .Values.kerberoshub.api.url }}/user/has-subscription"
            # Kerberos Vault
            - name: KSTORAGE_URI
              value: "{{ .Values.kerberosvault.uri }}/storage"
            - name: KSTORAGE_ACCESSKEY
              value: "{{ .Values.kerberosvault.accesskey }}"
            - name: KSTORAGE_SECRET
              value: "{{ .Values.kerberosvault.secretkey }}"
            - name: KSTORAGE_PROVIDER
              value: "{{ .Values.kerberosvault.provider }}"
---
apiVersion: v1
kind: Service
metadata:
  name: vault-proxy-svc
  labels:
    app: vault-proxy-svc
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      name: http
  selector:
    app: vault-proxy
